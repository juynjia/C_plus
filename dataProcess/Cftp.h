#ifndef __CFTP_H__
#define __CFTP_H__

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFtpClient wrapper class

class CFtpClient : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFtpClient)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xbfde3930, 0xc6bc, 0x11ce, { 0x90, 0xfc, 0x0, 0x0, 0xc0, 0xa3, 0x74, 0xb } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetAction();
	void SetAction(long);
	long GetFileAction();
	void SetFileAction(long);
	long GetTransferType();
	void SetTransferType(long);
	long GetTransferMode();
	void SetTransferMode(long);
	long GetDirAction();
	void SetDirAction(long);
	long GetListType();
	void SetListType(long);
	short GetPort();
	void SetPort(short);
	CString GetCurrentDir();
	void SetCurrentDir(LPCTSTR);
	CString GetLocalFile();
	void SetLocalFile(LPCTSTR);
	CString GetRemoteFile();
	void SetRemoteFile(LPCTSTR);
	CString GetTarget();
	void SetTarget(LPCTSTR);
	CString GetNewName();
	void SetNewName(LPCTSTR);
	CString GetHost();
	void SetHost(LPCTSTR);
	CString GetUser();
	void SetUser(LPCTSTR);
	CString GetPassword();
	void SetPassword(LPCTSTR);
	CString GetAccount();
	void SetAccount(LPCTSTR);
	CString GetWildcards();
	void SetWildcards(LPCTSTR);
	short GetLastResult();
	void SetLastResult(short);
	CString GetQuote();
	void SetQuote(LPCTSTR);
	BOOL GetNotify();
	void SetNotify(BOOL);
	CString GetFirewallServer();
	void SetFirewallServer(LPCTSTR);
	short GetFirewallPort();
	void SetFirewallPort(short);
	BOOL GetPassive();
	void SetPassive(BOOL);
	BOOL GetUseVariant();
	void SetUseVariant(BOOL);
	long GetId();
	void SetId(long);
	long GetRemoteId();
	void SetRemoteId(long);
	BOOL GetUseProperty();
	void SetUseProperty(BOOL);
	CString GetSendData();
	void SetSendData(LPCTSTR);
	CString GetProxyHost();
	void SetProxyHost(LPCTSTR);
	CString GetProxyUser();
	void SetProxyUser(LPCTSTR);
	CString GetProxyPassword();
	void SetProxyPassword(LPCTSTR);
	short GetProxyPort();
	void SetProxyPort(short);
	short GetProxyType();
	void SetProxyType(short);
	short GetHostType();
	void SetHostType(short);
	short GetTransmissionMode();
	void SetTransmissionMode(short);
	short GetBlockSize();
	void SetBlockSize(short);
	short GetMarkerFrequency();
	void SetMarkerFrequency(short);
	short GetRetryCount();
	void SetRetryCount(short);
	CString GetCurrentDirExt();
	void SetCurrentDirExt(LPCTSTR);

// Operations
public:
	BOOL Connect(LPCTSTR Host, LPCTSTR User, LPCTSTR Password, LPCTSTR Account);
	BOOL Disconnect();
	BOOL Abort();
	BOOL AbortFile();
	BOOL DeleteFile(LPCTSTR Target);
	BOOL GetFile(LPCTSTR RemoteFile, LPCTSTR LocalFile);
	BOOL PutFile(LPCTSTR LocalFile, LPCTSTR RemoteFile);
	BOOL AppendFile(LPCTSTR LocalFile, LPCTSTR RemoteFile);
	BOOL RenameFile(LPCTSTR Target, LPCTSTR NewName);
	BOOL ShortList();
	BOOL LongList();
	BOOL Ascii();
	BOOL Binary();
	BOOL FileMode();
	BOOL EventMode();
	BOOL ListDir(LPCTSTR Wildcards);
	BOOL AbortDir();
	BOOL ChangeDir(LPCTSTR Target);
	BOOL ParentDir();
	BOOL RenameDir(LPCTSTR Target, LPCTSTR NewName);
	BOOL CreateDir(LPCTSTR Target);
	BOOL RemoveDir(LPCTSTR Target);
	BOOL FwConnect(LPCTSTR FwServer, short FwPort, LPCTSTR Host, LPCTSTR User, LPCTSTR Password, LPCTSTR Account);
	BOOL Cancel();
	long ReceiveB(const VARIANT& Buffer, long Bytes);
	BOOL SendB(const VARIANT& Buffer, long Bytes);
	BOOL Remote(long RemoteId, LPCTSTR SrcFile, LPCTSTR DestFile);
	BOOL RemoteAppend(long RemoteId, LPCTSTR SrcFile, LPCTSTR DestFile);
    BOOL Parse (LPCTSTR ListLine, short* IsDir, BSTR* Name, long* Size, BSTR* DateTime, BSTR* Permissions);
    BOOL Allocate (short);
    BOOL Reinit();
	BOOL PutUniqueFile(LPCTSTR LocalFile, LPCTSTR RemoteFile);
	BOOL GetFileWithRestart(LPCTSTR RemoteFile, LPCTSTR LocalFile, LPCTSTR Marker);
	BOOL PutFileWithRestart(LPCTSTR LocalFile, LPCTSTR RemoteFile, LPCTSTR Marker);
	BOOL GetMultipleFile(LPCTSTR LocalDir, LPCTSTR Remote, BOOL Recursive);
	BOOL PutMultipleFile(LPCTSTR Local, LPCTSTR RemoteDir, BOOL Recursive);
    BOOL BlockMode();
    BOOL StreamMode();
	BOOL Login(LPCTSTR User, LPCTSTR Password, LPCTSTR Account);
	void AboutBox();

};

#endif // __CFTP_H__
