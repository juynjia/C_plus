#ifndef __CFTPS_H__
#define __CFTPS_H__

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFtpServer wrapper class

class CFtpServer : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFtpServer)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x4ea53500, 0x712, 0x11d0, { 0x84, 0x7f, 0x0, 0x0, 0xc0, 0xab, 0x4c, 0xc4 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetAction();
	void SetAction(long);
	long GetProfileAction();
	void SetProfileAction(long);
	long GetDeleteType();
	void SetDeleteType(long);
	short GetDirectoryCount();
	void SetDirectoryCount(short);
	long GetTotalLogins();
	void SetTotalLogins(long);
	short GetCurrentLogins();
	void SetCurrentLogins(short);
	long GetFilesSent();
	void SetFilesSent(long);
	long GetFilesReceived();
	void SetFilesReceived(long);
	long GetBytesSent();
	void SetBytesSent(long);
	long GetBytesReceived();
	void SetBytesReceived(long);
	CString GetUser();
	void SetUser(LPCTSTR);
	CString GetPassword();
	void SetPassword(LPCTSTR);
	short GetConnection();
	void SetConnection(short);
	short GetIdleTimeout();
	void SetIdleTimeout(short);
	short GetTimeout();
	void SetTimeout(short);
	BOOL GetLogFile();
	void SetLogFile(BOOL);
	CString GetLogFileName();
	void SetLogFileName(LPCTSTR);
	CString GetServerTitle();
	void SetServerTitle(LPCTSTR);
	short GetSessions();
	void SetSessions(short);
	CString GetUserDatabaseFile();
	void SetUserDatabaseFile(LPCTSTR);
	BOOL GetCustomLog();
	void SetCustomLog(BOOL);
	short GetBufferSize();
	void SetBufferSize(short);
	short GetPort();
	void SetPort(short);
	BOOL GetNoPassword();
	void SetNoPassword(BOOL);
	BOOL GetUppercase();
	void SetUppercase(BOOL);
	CString GetDefaultDir();
	void SetDefaultDir(LPCTSTR);
	BOOL GetUnixListing();
	void SetUnixListing(BOOL);

// Operations
public:
	CString GetDirectory(short index);
	void SetDirectory(short index, LPCTSTR lpszNewValue);
	CString GetExportName(short index);
	void SetExportName(short index, LPCTSTR lpszNewValue);
	BOOL GetReadPermission(short index);
	void SetReadPermission(short index, BOOL bNewValue);
	BOOL GetWritePermission(short index);
	void SetWritePermission(short index, BOOL bNewValue);
	BOOL GetListPermission(short index);
	void SetListPermission(short index, BOOL bNewValue);
	BOOL GetDeletePermission(short index);
	void SetDeletePermission(short index, BOOL bNewValue);
	BOOL AddUser(LPCTSTR User, LPCTSTR Password);
	BOOL DeleteUser(LPCTSTR User, short DeleteType);
	BOOL AddDir(LPCTSTR User, LPCTSTR Directory, LPCTSTR ExportName, BOOL ReadPerm, BOOL WritePerm, BOOL ListPerm, BOOL DeletePerm);
	BOOL RemoveDir(LPCTSTR User, LPCTSTR Directory);
	BOOL Query(LPCTSTR User);
	BOOL ListUsers();
	BOOL Listen(short Port);
	BOOL Accept();
	BOOL Disconnect(short Connection);
	BOOL Close();
	BOOL Quit();
	BOOL LoginStats();
	BOOL ModifyDir(LPCTSTR User, LPCTSTR Directory, LPCTSTR DefaultDir, BOOL ReadPerm, BOOL WritePerm, BOOL ListPerm, BOOL DeletePerm);
	void AboutBox();
};

#endif // __CFTPS_H__
